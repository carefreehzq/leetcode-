/*
输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。
示例 1：

输入：head = [1,3,2]
输出：[2,3,1]
*/

/*
官方题解：使用辅助栈，遍历一遍链表压入栈中，再依次弹出栈中元素存入数组中。
递归解法：if(当前节点==null)返回；//即递归终止条件
不然每次传递进下一个节点，再return tmp.add(当前节点的值）；
*/

/*
我的解法：遍历一遍链表求得链表长度，申请相同空间的数组。然后再遍历一遍链表，将第一个元素存在数组最后一个元素，依次类推。
*/

class Solution {
    public int[] reversePrint(ListNode head) {
        ListNode p = head;
        int len = 0;
        while(p!=null)
        {
            len++;
            p=p.next;
        }
        int[] res = new int[len];
        int idx = len-1;
        ListNode q = head;
        while(q!=null)
        {
            res[idx--] = q.val;
            q=q.next;
        }
        return res;
    }
}
