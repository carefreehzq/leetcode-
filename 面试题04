/*
在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
示例;
现有矩阵 matrix 如下：

[
  [1,   4,  7, 11, 15],
  [2,   5,  8, 12, 19],
  [3,   6,  9, 16, 22],
  [10, 13, 14, 17, 24],
  [18, 21, 23, 26, 30]
]
给定 target = 5，返回 true。

给定 target = 20，返回 false。
*/

/*
有两个特别的元素，左下角的元素和右上角的元素。取右上角元素为例，如果一个数值大于它，则可大于其行所有元素，故移动下一行
如果一个元素小于它，则小于该列所有元素，故移动到左边一列。
*/
class Solution {
    public boolean findNumberIn2DArray(int[][] matrix, int target) {
        if(matrix.length==0)
            return false;
        else if(matrix[0].length==0)
            return false;
        int row=0;
        int col=matrix[0].length-1;
        while(row<matrix.length&&col>=0)
        {
            if(target==matrix[row][col])
                return true;
            else if(target>matrix[row][col])
                row++;
            else
                col--;
        }
        System.out.println(row);
         System.out.println(col);
        return false;
    }
}
